// <auto-generated />
using System;
using HotelBookingSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBookingSystem.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20250408120603_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("HotelBookingSystem.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            Number = "101",
                            PricePerNight = 100m,
                            Type = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            Number = "102",
                            PricePerNight = 100m,
                            Type = "Standard"
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = true,
                            Number = "201",
                            PricePerNight = 150m,
                            Type = "Deluxe"
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = true,
                            Number = "202",
                            PricePerNight = 150m,
                            Type = "Deluxe"
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            Number = "301",
                            PricePerNight = 250m,
                            Type = "Suite"
                        });
                });

            modelBuilder.Entity("HotelBookingSystem.Models.Booking", b =>
                {
                    b.HasOne("HotelBookingSystem.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
